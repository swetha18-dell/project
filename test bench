module tb_counter;  
  reg clk;                     
  reg nrst;          
  wire [3:0] out;             
  counter   c0 ( .clk (clk),  
                 .nrst (nrst),  
                 .out (out));  
  
  // Generate a clock that should be driven to design  
  // This clock will flip its value every 5ns -> time period = 10ns -> freq = 100 MHz  
   
 always #5 clk = ~clk;  
  
  // This initial block forms the stimulus of the testbench  
  initial begin  
    // Initialize testbench variables to 0 at start of simulation  
    clk <= 0;  
    rstn <= 0;  
  
    // Drive rest of the stimulus, reset is asserted in between  
    #20   rstn <= 1;  
    #80   rstn <= 0;  
    #50   rstn <= 1;  
  
    // Finish the stimulus after 200ns  
    #20 $finish;  
  end  
endmodule  
